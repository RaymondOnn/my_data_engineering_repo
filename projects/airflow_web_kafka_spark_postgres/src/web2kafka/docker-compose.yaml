# PORTS:
# 2181: 2181 ZooKeeper
# 8889: 8080 kafka-ui 
# 8081: 8081 schema-registry 
# 8083: 8083 Kafka-connect 
# 9092: 9092 Kafka-broker-1 
# 9093: 9093 Kafka-broker-2 
# 9094: 9094 Kafka-broker-3



version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181     # Instructs ZooKeeper where to listen for connections by clients such as Apache Kafka
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always  
    networks:
      - kafka-network
      #- airflow-kafka

  # docs: https://docs.confluent.io/platform/current/kafka/multi-node.html
  # KAFKA_ZOOKEEPER_CONNECT: Instructs Kafka how to get in touch with ZooKeeper.
  # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: Defines key/value pairs for the security protocol to use, per listener name
  # KAFKA_INTER_BROKER_LISTENER_NAME: Defines which listener to use for inter-broker communication. Kafka brokers communicate between themselves, usually on the internal network
  kafka-broker-1:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-broker-1
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"  
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka-broker-1:19092,DOCKER_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,DOCKER_HOST:PLAINTEXT  # PLAINTEXT means no security
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    healthcheck:
      test: [ "CMD", "bash", "-c", "nc -z localhost 9092" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - kafka-network
    #  - airflow-kafka
  kafka-broker-2:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-broker-2
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181" 
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka-broker-2:19093,DOCKER_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,DOCKER_HOST:PLAINTEXT 
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    healthcheck:
      test: [ "CMD", "bash", "-c", "nc -z localhost 9093" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - kafka-network
    # - airflow-kafka

  kafka-broker-3:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-broker-3
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181" 
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka-broker-3:19094,DOCKER_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,DOCKER_HOST:PLAINTEXT 
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    healthcheck:
      test: [ "CMD", "bash", "-c", "nc -z localhost 9094" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - kafka-network
    #  - airflow-kafka

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.5.0
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-broker-1:19092,kafka-broker-2:19093,kafka-broker-3:19094
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: docker-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: 'kafka-connect'
      CONNECT_LOG4J_ROOT_LOGLEVEL: 'INFO'
      CONNECT_LOG4J_LOGGERS: 'org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR'
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
    restart: always
    networks:
      - kafka-network
  #     - airflow-kafka

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: schema-registry
    ports:
      - "8081:8081"
    depends_on:
      kafka-broker-1:
        condition: service_healthy
      kafka-broker-2:
        condition: service_healthy
      kafka-broker-3 :
        condition: service_healthy
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-broker-1:19092,kafka-broker-2:19093,kafka-broker-3:19094
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: [ "CMD", "curl", "--output", "/dev/null", "--silent", "--head", "--fail", "http://schema-registry:8081/subjects" ]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: always
    networks:
      - kafka-network
    #  - airflow-kafka

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8889:8080  # host: image
    depends_on:
      kafka-broker-1:
        condition: service_completed_successfully
      kafka-broker-2:
        condition: service_completed_successfully
      kafka-broker-3 :
        condition: service_completed_successfully
      schema-registry:
        condition: service_completed_successfully
      kafka-connect:
        condition: service_completed_successfully
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka-broker-1:19092,PLAINTEXT_HOST://kafka-broker-1:19092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: kafka-connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083
      DYNAMIC_CONFIG_ENABLED: 'true'
    restart: always
    networks:
      - kafka-network
    #  - airflow-kafka
networks:
  kafka-network:
    driver: bridge


