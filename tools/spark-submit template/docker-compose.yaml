version: '3.8'

services:
  spark-master:
    container_name: da-spark-master
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: da-spark-image
#    entrypoint: ['./entrypoint.sh', 'master']
    environment:
      - SPARK_MODE=master
#     healthcheck:
#       test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
#       interval: 5s
#       timeout: 3s
#       retries: 3
    volumes:
      - ${PWD:-.}/app:/opt/spark/workdir
      - ${PWD:-.}/conf:/opt/spark/conf
      - ${PWD:-.}/app/logs:/opt/spark/spark-events
    env_file:
      - ./docker/.env.spark
    ports:
      - '9090:8080'
      - '7077:7077'
#  spark-history-server:
#    container_name: da-spark-history
#    image: da-spark-image
#    entrypoint: ['./entrypoint.sh', 'history']
#    depends_on:
#      - spark-master
#    env_file:
#      - ./docker/.env.spark
#    volumes:
#      - spark-logs:/opt/spark/spark-events
#    ports:
#      - '18080:18080'
  spark-worker:
    container_name: da-spark-worker
    image: da-spark-image
#    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    env_file:
      - ./docker/.env.spark
    volumes:
      - ${PWD:-.}/app:/opt/spark/workdir
      - ${PWD:-.}/conf:/opt/spark/conf
      - ${PWD:-.}/app/logs:/opt/spark/spark-events

volumes:
  spark-logs: